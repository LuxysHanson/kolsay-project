<?php

namespace common\models;
use common\traits\AttributesToInfoTrait;
use Yii;
use yii\web\UploadedFile;
use common\components\ActiveRecord;


/**
 * This is the model class for table "items".
 *
 * @property int $id
 * @property string|null $title
 * @property string|null $title_meta
 * @property string|null $ceo_desc
 * @property string|null $description
 * @property int|null $created_at
 * @property int|null $updated_at
 * @property int|null $status
 * @property string|null $attachments
 * @property string|null $info
 * @property string|null $price
 * @property int|null $category_id
 * @property string|null $characters
 * @property string|null $alias
 * @property string|null $presentation
 * @property Category $category
 */
class Items extends ActiveRecord
{
    use AttributesToInfoTrait;

    const STATUS_DRAFT = 0;
    const STATUS_PUBLISH = 1;

    public $file;
    public $file_info;
    public $pres_file;
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'items';
    }

    public function attributesToInfo() {
        return ['characters', 'size', 'country', 'guarantee', 'weight', 'presentation', 'ceo_desc', 'title_meta'];
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['title', 'description', 'attachments', 'characters', 'category_id'], 'required'],
            [['description', 'attachments'], 'string'],
            [['created_at', 'updated_at', 'status'], 'integer'],
            [['title'], 'string', 'max' => 255],
            [['price'], 'double'],
            [['presentation'], 'file'],
            [['file'], 'file', 'extensions' => 'png, jpg, jpeg', 'maxSize' => 1024 * 1024 * 2, 'tooBig' => 'Файл не должен превышать 2 мб'],
            [['characters', 'size', 'country', 'guarantee', 'weight', 'category_id', 'alias', 'presentation','file_info', 'ceo_desc', 'title_meta'], 'safe'],
        ];
    }
    private function savePresentation(UploadedFile $presentation) {
        $link = ($this->presentation) ? : null;
        $this->pres_file = $presentation;
        if ($this->validate(['presentation'])) {
            $rand = $this->alias . '_' . rand(0, 99999);
            $dir = Yii::getAlias('@frontend/web/docs/items/');
            $dir2 = Yii::getAlias('docs/items/');
            $fileName = $rand . '.' . $this->pres_file->extension;
            $this->pres_file->saveAs($dir . $fileName);
            $this->pres_file = $fileName; // без этого ошибка
            $link = '/'.$dir2 . $fileName;
        }

        $this->presentation = $link;
        $this->pres_file = null;
    }

    public function save($runValidation = true, $attributeNames = null)
    {
        $this->attachments = json_encode($this->file_info);
        $pres_file = UploadedFile::getInstance($this, "pres_file");
        if ($pres_file && $pres_file->tempName) {
            $this->savePresentation($pres_file);
        }
        if ($this->isNewRecord){
            $this->created_at = time();
        }
        $this->updated_at = time();
        return parent::save($runValidation, $attributeNames); // TODO: Change the autogenerated stub
    }


    /**
     * @return array
     */
    public static function getStatusList(){
        return [
            self::STATUS_DRAFT => Yii::t('main', 'Черновик'),
            self::STATUS_PUBLISH => Yii::t('main', 'Опубликован'),
        ];
    }

    /**
     * @return mixed|string
     */
    public function getMainImage(){
        return $this->getFiles() && sizeof($this->getFiles()) > 0? $this->getFiles()[0]:'';
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCategory(){
        return $this->hasOne(Category::className(), ['id' => 'category_id']);
    }

    /**
     * @return array|mixed
     */
    public function getFiles(){
        return $this->attachments && strlen($this->attachments) > 0 ? json_decode($this->attachments) : [];
    }
    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Название',
            'alias' => 'Алиас',
            'price' => 'Цена',
            'description' => 'Описание',
            'created_at' => 'Создано',
            'updated_at' => 'Изменено',
            'status' => 'Статус',
            'attachments' => 'Изображение',
            'category_id'=>'Категории',
            'size'=>'Размер',
            'country'=>'Страна',
            'guarantee'=>'Гарантия',
            'weight'=>'Вес',
            'characters'=>'Характеристики',
            'presentation'=>'Презентация',
            'pres_file'=>'Презентация',
            'ceo_desc' => 'СЕО description (мета тег)',
            'title_meta' => 'СЕО title (мета тег)'
        ];

    }
}
