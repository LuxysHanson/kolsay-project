<?php

namespace common\models;

use common\traits\AttributesToInfoTrait;
use Yii;
use common\components\ActiveRecord;
use yii\web\UploadedFile;

/**
 * This is the model class for table "contacts".
 *
 * @property int $id
 * @property string|null $title
 * @property string|null $number
 * @property string|null $email
 * @property string|null $position
 * @property int|null $type
 * @property double|null $map_x
 * @property double|null $map_y
 * @property string|null $image
 * @property int|null $created_at
 * @property int|null $updated_at
 * @property string|null $info
 */
class Contacts extends ActiveRecord
{
    use AttributesToInfoTrait;

    const TYPE_CONSULTANT = 1;
    const TYPE_SERVICE_CENTER = 2;
    const TYPE_DEVELOPER = 3;
    const SCENARIO_EMPLOYER = 'employer';
    const SCENARIO_CENTER = 'center';

    public $file;
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'contacts';
    }
    /**
     * {@inheritdoc}
     */

    public function attributesToInfo()
    {
        return [
            'map_x',
            'map_y'
        ];
    }
    public function scenarios()
    {
        return [
            self::SCENARIO_EMPLOYER => ['title', 'number','position','file','email','type'],
            self::SCENARIO_CENTER => ['title', 'number','position','file','map_x','type','map_y'],
        ];
    }
    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['title', 'number','position'], 'required'],
            [['type', 'created_at', 'updated_at'], 'integer'],
            [['map_x', 'map_y'], 'double'],
            [['map_x', 'map_y'], 'required', 'on' => self::SCENARIO_CENTER],
            ['email', 'email'],
            [['file'], 'safe'],
            [['title', 'number', 'email', 'position', 'image'], 'string', 'max' => 255],
        ];
    }
    /**
     * @param UploadedFile $file
     */
    private function saveFile(UploadedFile $file){
        $link = ($this->image) ? : null;
        $this->file = $file;
        if ($this->validate(['file'])) {
            $rand = uniqid(rand(), true);
            $dir = Yii::getAlias('@frontend/web/docs/contacts/');
            $dir2 = Yii::getAlias('docs/contacts/');
            $fileName = $rand . '.' . $this->file->extension;
            $this->file->saveAs($dir . $fileName);
            $this->file = $fileName; // без этого ошибка
            $link = '/'.$dir2 . $fileName;
        }

        $this->image = $link;
        $this->file = null;
    }

    public function save($runValidation = true, $attributeNames = null)
    {
        $file = UploadedFile::getInstance($this, "file");
        if ($file && $file->tempName) {
            $this->saveFile($file);
        }
        if ($this->isNewRecord){
            $this->created_at = time();
        }
        $this->updated_at = time();
        return parent::save($runValidation, $attributeNames); // TODO: Change the autogenerated stub
    }
    /**
     * @return array
     */
    public static function getTypeList(){
        return [
            self::TYPE_CONSULTANT=> Yii::t('main', 'Консультанты'),
            self::TYPE_SERVICE_CENTER=> Yii::t('main', 'Сервис центр'),
            self::TYPE_DEVELOPER => Yii::t('main', 'Специалисты отдела разработки '),
        ];
    }

    /**
     * @param $type
     * @return mixed
     */
    public static function getTypeLabel($type){
        return self::getTypeList()[$type];
    }
    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => $this->type == self::TYPE_SERVICE_CENTER ? 'Город' : 'ФИО',
            'number' => 'Номер телефона',
            'email' => 'Email',
            'position' => $this->type == self::TYPE_SERVICE_CENTER ? 'Адрес' : 'Должность',
            'type' => 'Тип',
            'file' => 'Изображение',
            'created_at' => 'Создано',
            'updated_at' => 'Обновлено',
            'map_x' => 'Широта в 2гис',
            'map_y' => 'Долгота в 2гис',
        ];
    }

}
